// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rdme openapi error handling should throw an error if an invalid OpenAPI 3.1 definition is supplied 1`] = `
[SyntaxError: OpenAPI schema validation failed.

[31m[1mREQUIRED[22m[39m[31m must have required property 'openIdConnectUrl'[39m

[0m [90m 24 |[39m   [32m"components"[39m[33m:[39m {[0m
[0m [90m 25 |[39m     [32m"securitySchemes"[39m[33m:[39m {[0m
[0m[31m[1m>[22m[39m[90m 26 |[39m       [32m"tlsAuth"[39m[33m:[39m {[0m
[0m [90m    |[39m                  [31m[1m^[22m[39m [31m[1m‚òπÔ∏è  [95mopenIdConnectUrl[31m is missing here![22m[39m[0m
[0m [90m 27 |[39m         [32m"type"[39m[33m:[39m [32m"mutualTLS"[39m[0m
[0m [90m 28 |[39m       }[0m
[0m [90m 29 |[39m     }[0m]
`;

exports[`rdme openapi should bundle and upload the expected content 1`] = `
Object {
  "components": Object {
    "securitySchemes": Object {
      "api_key": Object {
        "in": "header",
        "name": "api_key",
        "type": "apiKey",
      },
      "petstore_auth": Object {
        "flows": Object {
          "implicit": Object {
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "scopes": Object {
              "read:pets": "read your pets",
              "write:pets": "modify pets in your account",
            },
          },
        },
        "type": "oauth2",
      },
    },
  },
  "info": Object {
    "title": "Example petstore to demo our handling of external $ref pointers",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": Object {
    "/pet": Object {
      "post": Object {
        "description": "",
        "operationId": "addPet",
        "requestBody": Object {
          "$ref": "#/paths/~1pet/put/requestBody",
        },
        "responses": Object {
          "405": Object {
            "description": "Invalid input",
          },
        },
        "security": Array [
          Object {
            "petstore_auth": Array [
              "write:pets",
              "read:pets",
            ],
          },
        ],
        "summary": "Add a new pet to the store",
        "tags": Array [
          "pet",
        ],
      },
      "put": Object {
        "description": "",
        "operationId": "updatePet",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/paths/~1pet~1%7BpetId%7D/get/responses/200/content/application~1xml/schema",
              },
            },
            "application/xml": Object {
              "schema": Object {
                "$ref": "#/paths/~1pet~1%7BpetId%7D/get/responses/200/content/application~1xml/schema",
              },
            },
          },
          "description": "Pet object that needs to be added to the store",
          "required": true,
        },
        "responses": Object {
          "400": Object {
            "description": "Invalid ID supplied",
          },
          "404": Object {
            "description": "Pet not found",
          },
          "405": Object {
            "description": "Validation exception",
          },
        },
        "security": Array [
          Object {
            "petstore_auth": Array [
              "write:pets",
              "read:pets",
            ],
          },
        ],
        "summary": "Update an existing pet",
        "tags": Array [
          "pet",
        ],
      },
    },
    "/pet/{petId}": Object {
      "get": Object {
        "description": "Returns a single pet",
        "operationId": "getPetById",
        "parameters": Array [
          Object {
            "description": "ID of pet to return",
            "in": "path",
            "name": "petId",
            "required": true,
            "schema": Object {
              "format": "int64",
              "type": "integer",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/paths/~1pet~1%7BpetId%7D/get/responses/200/content/application~1xml/schema",
                },
              },
              "application/xml": Object {
                "schema": Object {
                  "properties": Object {
                    "category": Object {
                      "properties": Object {
                        "id": Object {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": Object {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "xml": Object {
                        "name": "Category",
                      },
                    },
                    "id": Object {
                      "default": 40,
                      "example": 25,
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": Object {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": Object {
                      "items": Object {
                        "example": "https://example.com/photo.png",
                        "type": "string",
                      },
                      "type": "array",
                      "xml": Object {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "status": Object {
                      "description": "pet status in the store",
                      "enum": Array [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": Object {
                      "items": Object {
                        "properties": Object {
                          "id": Object {
                            "format": "int64",
                            "type": "integer",
                          },
                          "name": Object {
                            "type": "string",
                          },
                        },
                        "type": "object",
                        "xml": Object {
                          "name": "Tag",
                        },
                      },
                      "type": "array",
                      "xml": Object {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                  },
                  "required": Array [
                    "name",
                    "photoUrls",
                  ],
                  "type": "object",
                  "xml": Object {
                    "name": "Pet",
                  },
                },
              },
            },
            "description": "successful operation",
          },
          "400": Object {
            "description": "Invalid ID supplied",
          },
          "404": Object {
            "description": "Pet not found",
          },
          "default": Object {
            "description": "successful response",
          },
        },
        "security": Array [
          Object {
            "api_key": Array [],
          },
        ],
        "summary": "Find pet by ID",
        "tags": Array [
          "pet",
        ],
      },
    },
  },
  "servers": Array [
    Object {
      "url": "http://petstore.swagger.io/v2",
    },
  ],
}
`;
