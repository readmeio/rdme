branches:
  - name: main
  - name: container-registry-v2
    prerelease: true
    channel: next
plugins:
  - '@semantic-release/commit-analyzer'
  - '@semantic-release/release-notes-generator'
  - '@semantic-release/changelog'
  # `npm` must be before `git` so the `npm` command can properly bump
  # the package*.json files before we commit the changes
  - '@semantic-release/npm'
  - [
      '@semantic-release/exec',
      {
        # Updates our action.yml file to reflect current Docker image version.
        # This needs to happen before `git` so we can to commit this file
        'prepareCmd': './bin/set-action-image.js ${nextRelease.version}',
      },
    ]
  - [
      '@semantic-release/git',
      {
        assets: ['action.yml', 'CHANGELOG.md', 'package.json', 'package-lock.json'],
        message: "build(release): ðŸš€ v${nextRelease.version} ðŸ¦‰\n\n${nextRelease.notes}\n[skip ci]",
      },
    ]
  - [
      '@semantic-release/exec',
      {
        # Sets the next version as a GitHub Actions output parameter for usage in subsequent workflow steps
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-output-parameter
        'verifyReleaseCmd': 'echo nextVersion=${nextRelease.version} >> $GITHUB_OUTPUT',
        # Adds a couple extra tags as aliases for our GitHub Actions users
        'prepareCmd': 'git tag ${nextRelease.version} && ./bin/set-major-version-tag.js',
        # Lightweight alternative to `@semantic-release/github` that creates a draft release
        'publishCmd': 'gh release create ${nextRelease.version} --draft --generate-notes',
      },
    ]
